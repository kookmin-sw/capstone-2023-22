# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
#
#1

name: Sesohaeng CI with GitActions

on:
  push:
    branches: [ "main" ]

# permissions:
#   contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: make application.yml
      run: |
          echo ">> mkdir & touch"
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch ./application.yml
          echo ">> copy application.yml"
          echo "${{ secrets.APPLICATION_YML }}" >> ./application.yml
          echo "server.port=8080" >> ./application.yml
          
      shell: bash
      
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
        
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
        
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
    - name: Docker build
      run: |
        docker build --platform linux/amd64 -t sesohaeng .
        docker tag sesohaeng ${{ secrets.DOCKERHUB_USERNAME }}/sesohaeng:${GITHUB_SHA::7}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/sesohaeng:${GITHUB_SHA::7}
        
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          envs: GITHUB_SHA
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/sesohaeng:${GITHUB_SHA::7}
            docker tag ${{ secrets.DOCKERHUB_USERNAME }}/sesohaeng:${GITHUB_SHA::7} sesohaeng
            docker stop sesohaeng
            docker run -d --rm --name server -p 8080:8080 sesohaeng
